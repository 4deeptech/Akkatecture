# Akkatecture Development CI CD pipeline definition
# This definition is responsible for building and testing
# the project in the development branch. It pushes package
# artefacts to a private nuget feed as alpha packages.

trigger:
  branches:
    include:
    - dev

variables:
  majorVersion: '0'
  minorVersion: '5'
  patchVersion: '0'
  feedVersion: 'alpha'
  dayOfYear: $(DayOfYear)
  revision: $(Rev:r)
  
name: ${{ format('{0}.{1}.{2}-{3}-{4}{5}', variables.majorVersion, variables.minorVersion, variables.patchVersion, variables.feedVersion, variables.dayOfYear, variables.revision) }}

jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      buildConfiguration: 'Release'
      
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore [Akkatecture]'
      inputs:
        command: 'restore'
        projects: 'Akkatecture.sln'

    - task: DotNetCoreCLI@2
      displayName: 'Build [Akkatecture]'
      inputs:
        command: 'build'
        projects: 'Akkatecture.sln'
        configuration: '$(BuildConfiguration)'
        arguments: '/p:Version=$(Build.BuildNumber)'
        #majorVersion: ${{ variables.majorVersion }}
        #minorVersion: ${{ variables.minorVersion }}
        #patchVersion: ${{ format('{0}-{1}-{2}{3}', variables.patchVersion, variables.feedVersion, variables.dayOfYear, variables.revision) }}

    - task: DotNetCoreCLI@2
      displayName: 'Test [Akkatecture.Tests]'
      inputs:
        command: 'test'
        configuration: $(BuildConfiguration)
        projects: 'test/Akkatecture.Tests/Akkatecture.Tests.csproj'
        publishTestResults: true
        
    - script: echo ${{ format('src/Akkatecture.Clustering/bin/{0}/*.nupkg', variables.buildConfiguration) }}

    - task: DotNetCoreCLI@2
    - script: echo ${{ format('src/Akkatecture.Clustering/bin/{0}/*.nupkg', variables.buildConfiguration) }}
      displayName: 'Push [Akkatecture]'
      inputs:
        command: 'push'
        packagesToPush: ${{ format('src/Akkatecture/bin/{0}/*.nupkg', variables.buildConfiguration) }}
        feedsToUse: 'select'
        vstsFeed: 'akkatecture'
    - task: DotNetCoreCLI@2
      displayName: 'Push [Akkatecture.Cluster]'
      inputs:
        command: 'push'
        packagesToPush: ${{ format('src/Akkatecture.Clustering/bin/{0}/*.nupkg', variables.buildConfiguration) }}
        feedsToUse: 'select'
        vstsFeed: 'akkatecture'
        